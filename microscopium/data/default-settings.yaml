global:
  # where to put the output file. The rules applied to this setting are:
  #  - if it's an empty string, put it in a sister directory to the input data.
  #  - if it's a *relative* path, the path is relative to the parent directory
  #    of the input data. e.g. if your file is in
  #    /home/user/data/screen/screen.csv, then the output directory will be in
  #    /home/user/data/{output-dir}.
  #  - if it's an *absolute* path, any intermediate directories will be created
  #    and the output will be placed exactly where specified.
  output-dir: ''
# The first phase is a feature computation from images specified in a csv file.
# Input csv files should have one row per input image and minimally three
# columns:
#   - an *index* column containing a unique identifier for each image.
#   - a *url* column containing the path to each image (can be absolute or
#     relative to the csv file path).
#   - a *replicate* column containing an identifier for each replicate, meaning
#     images having received identical treatment.
#   - optionally, *group* columns containing arbitrary groupings of samples.
#     These will be used to color points in the plot and produce an interactive
#     legend, so there should not be too many categories in any group.
feature-computation:
  source-table:
    # column type : column name in dataset csv
    index: index
    path: url
    replicates: reps
    groups:
      - group
  feature-function:
    function:
      microscopium.feature.default_feature_map
    kwargs:
      random_seed : 0
embeddings:
  # Features produced by feature computation can be reduced to 2D for display
  # as a scatter-plot. This is done with the below classes, which must follow
  # the scikit-learn unsupervised `fit`/`fit_transform` API. The 0th component
  # will map to x, and the 1st to y, and both will be placed in the
  # corresponding column in the output.
  UMAP:
    class: umap.UMAP
    x: x.umap
    y: y.umap
  tSNE:
    class: sklearn.manifold.TSNE
    x: x.tsne
    y: y.tsne
  PCA:
    class: sklearn.decomposition.PCA
    x: x.pca
    y: y.pca
  default: tSNE
color-columns:
  categorical:
    - group
  numeric: []
image-column:
  url
tooltip-columns:
  - index
  - url
plots:
  glyph_size: 10
